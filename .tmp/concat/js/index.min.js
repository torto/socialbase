(function() {
  'use strict';

  angular.module('socialbase', ['ngRoute', 'ngStorage']).config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {
    $locationProvider.html5Mode(true);
    $routeProvider.when('/', {
      templateUrl: 'partials/index.html',
      controller: 'IndexController'
    });

    $routeProvider.otherwise({
      redirectTo: '/'
    });

  }]);

  window.socialBaseAngular = angular.module('socialbase');
}());

(function() {
  'use strict';
  socialBaseAngular.service('IndexService', ['$sessionStorage', IndexService]);

  function IndexService($sessionStorage) {
    var service = this;
    var list = [];

    if ($sessionStorage.list) {
      list = $sessionStorage.list;
    }

    function getList() {
      return list;
    }

    function setListStorage(listElements, callback) {
      $sessionStorage.list = listElements;
      list = listElements;
      callback(list);
    }

    function cleanStorage(){
      $sessionStorage.list = [];
      list = [];
    }

    service.getList = getList;
    service.setListStorage = setListStorage;
    service.cleanStorage = cleanStorage;

  }
}());

(function() {
  'use strict';
  socialBaseAngular.controller('IndexController', ['$scope', 'IndexService', IndexController]);

  function IndexController($scope, IndexService) {
    function init() {
      setVariables();
      setMethods();
      getElements();
      watchList();
    }

    function setVariables() {
      $scope.title = 'TODO-List';
      $scope.isList = true;
      $scope.todoListElements = [];
    }

    function setMethods() {
      $scope.removeItem = removeItem;
      $scope.cancelRemoveItem = cancelRemoveItem;
      $scope.addItem = addItem;
    }

    function getElements() {
      $scope.todoListElements = IndexService.getList();
    }

    function watchList() {
      $scope.$watchCollection('todoListElements', function() {
        IndexService.setListStorage($scope.todoListElements, function(response) {
          $scope.todoListElements = response;
        }, true);
      });
    }

    function removeItem(elem, index) {
      $scope.todoListElements.splice(index, 1);
    }

    function cancelRemoveItem(elem, index) {}

    function addItemInArray(item){
      $scope.todoListElements.push({description: item, isChecked: false});
    }

    function addItem(item){
      addItemInArray(item);
    }

    init();
  }
}());

(function() {
  'use strict';
  socialBaseAngular.directive('pageDefault', [todoListDirective]);

  function todoListDirective() {
    return {
      restrict: 'E',
      transclude: true,
      scope: {
        title: '@',
        isList: '=list'
      },
      templateUrl: 'js/directives/pages/PageDefaultView.html'
    };
  }
}());

(function() {
  'use strict';
  socialBaseAngular.directive('todoListItem', [todoListItem]);

  function todoListItem() {
    return {
      restrict: 'E',
      scope: {
        listItem: '=list',
        removeItem : '&',
        cancelRemoveItem: '&'
      },
      templateUrl: 'js/directives/todo/item/TodoListItemView.html'
    };
  }
}());

(function() {
  'use strict';
  socialBaseAngular.directive('todoListAddItem', [todoListAddItem]);

  function todoListAddItem() {
    return {
      restrict: 'E',
      scope: {
        listItem: '=list',
        addItem: '&'
      },
      templateUrl: 'js/directives/todo/new-item/TodoListAddItemView.html',
      link: function(scope, params, algo) {
        function init() {
          setVariables();
          setMethods();
        }

        function setMethods(){
          scope.addItemEnter = addItemEnter;
          scope.cleanValues = cleanValues;
        }

        function setVariables() {
          scope.newItem = '';
        }

        function cleanValues(){
          scope.newItem = '';
        }

        function addItemEnter(event){
          if(event.keyCode === 13){
            scope.addItem({item: scope.newItem});
            cleanValues();
          }
        }

        init();
      }
    };
  }
}());

(function() {
  'use strict';
  socialBaseAngular.directive('menuLeft', [menuLeftDirective]);

  function menuLeftDirective() {
    return {
      restrict: 'E',
      templateUrl: 'js/directives/menus/MenuLeftView.html'
    };
  }
}());

(function() {
  'use strict';
  socialBaseAngular.directive('confirmDialog', [confirmDialog]);

  function confirmDialog() {
    return {
      restrict: 'E',
      scope: {
        message: '=',
        labelCancel: '=',
        labelOk: '=',
        onSuccess: '&',
        onCancel: '&',
        index: '=',
        model: '=',
        show: '='
      },
      templateUrl: 'js/directives/dialogs/confirm/ConfirmDialogView.html',
      link: function(scope, params, algo) {
        function init(){
          setMethods();
        }

        function setMethods(){
          scope.clickOnOk = clickOnOk;
          scope.clickOnCancel = clickOnCancel;
        }

        function clickOnOk(){
          scope.show = false;
          scope.onSuccess({index: scope.index, elem: scope.model});
        }

        function clickOnCancel(){
          scope.show = false;
          scope.onCancel({index: scope.index, elem: scope.model});
        }
        init();
      }
    };
  }
}());
